"use strict";(self.webpackChunkfreestyler=self.webpackChunkfreestyler||[]).push([[7518],{"./src/2 HTML Design Patterns/2-07 Terminal Block Elements/__tests__/TerminalBlockElements.int.story.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>TerminalBlockElements_int_story,regular:()=>regular});var dist=__webpack_require__("./node_modules/@storybook/addon-jest/dist/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function TerminalBlockElements(){return(0,jsx_runtime.jsxs)("div",{className:"terminal-block-elements",children:[(0,jsx_runtime.jsx)("h1",{children:"Terminal Block Elements"}),(0,jsx_runtime.jsx)("p",{children:"Headings, paragraphs, blockquotes, definition terms, addresses, and table captions are terminal block elements. They may contain only content. An HTML validator will declare a document invalid if you attempt to put block elements inside terminal blocks."}),(0,jsx_runtime.jsx)("blockquote",{children:"A blockquote is a terminal block."}),(0,jsx_runtime.jsxs)("dl",{children:[(0,jsx_runtime.jsx)("dt",{children:"NOTE:"}),(0,jsx_runtime.jsx)("dd",{children:"The content of terminal blocks is always inline."})]}),(0,jsx_runtime.jsx)("address",{children:"An address is a terminal block."}),(0,jsx_runtime.jsxs)("table",{children:[(0,jsx_runtime.jsx)("caption",{children:"Table caption is a terminal block."}),(0,jsx_runtime.jsx)("tr",{children:(0,jsx_runtime.jsx)("td",{})})]})]})}TerminalBlockElements.displayName="TerminalBlockElements",TerminalBlockElements.__docgenInfo={description:"",methods:[],displayName:"TerminalBlockElements"};var _jest_test_results=__webpack_require__("./.jest-test-results.json");const TerminalBlockElements_int_story={title:"2 HTML Design Patterns/2-07 Terminal Block Elements",component:TerminalBlockElements,decorators:[(0,dist.x)({results:_jest_test_results})],parameters:{storySource:{source:"import { withTests } from '@storybook/addon-jest'\nimport { TerminalBlockElements } from '../TerminalBlockElements'\nimport results from '../../../../.jest-test-results.json'\n\nexport default {\n  title: '2 HTML Design Patterns/2-07 Terminal Block Elements',\n  component: TerminalBlockElements,\n  decorators: [withTests({ results })],\n  parameters: { jest: ['TerminalBlockElements.int.test.js'] },\n  excludeStories: ['custom'],\n}\n\nexport function regular() {\n  return <TerminalBlockElements />\n}\n",locationsMap:{regular:{startLoc:{col:7,line:13},endLoc:{col:1,line:15},startBody:{col:7,line:13},endBody:{col:1,line:15}}}},jest:["TerminalBlockElements.int.test.js"]},excludeStories:["custom"]};var regular=function regular(){return(0,jsx_runtime.jsx)(TerminalBlockElements,{})};regular.displayName="regular",regular.parameters={...regular.parameters,docs:{...regular.parameters?.docs,source:{originalSource:"function regular() {\n  return <TerminalBlockElements />;\n}",...regular.parameters?.docs?.source}}}}}]);